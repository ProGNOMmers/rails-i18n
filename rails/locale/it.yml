# Italian translation for Ruby on Rails
# by Maurizio De Santis (desantis.maurizio@gmail.com)
#
# I decided to write this translation from the scratch, because
# I am tired of debugging i18n locales written with shallowness.
#
# This localization file targets Rails 3.0.
#

it:

  # ---
  # Original Rails locale file: activesupport-3.0.0/lib/active_support/locale/en.yml
  # ---

  date:
    formats:
      # Use the strftime parameters for formats.
      # When no format has been given, it uses default.
      # You can provide other formats here if you like!
      default: "%d-%m-%Y"
      short: "%d %b"
      long: "%d %B %Y"

    day_names: [Domenica, Lunedì, Martedì, Mercoledì, Giovedì, Venerdì, Sabato]
    abbr_day_names: [Dom, Lun, Mar, Mer, Gio, Ven, Sab]

    # Don't forget the nil at the beginning; there's no such thing as a 0th month
    month_names: [~, Gennaio, Febbraio, Marzo, Aprile, Maggio, Giugno, Luglio, Agosto, Settembre, Ottobre, Novembre, Dicembre]
    abbr_month_names: [~, Gen, Feb, Mar, Apr, Mag, Giu, Lug, Ago, Set, Ott, Nov, Dic]
    # Used in date_select and datetime_select.
    order:
      - :day
      - :month
      - :year

  time:
    formats:
      default: "%a %d %b %Y, %H:%M:%S %z"
      short: "%d %b %H:%M"
      long: "%d %B %Y %H:%M"
    am: "am"
    pm: "pm"

  # Used in array.to_sentence.
  support:
    array:
      words_connector: ", "
      two_words_connector: " e "
      last_word_connector: ", e "

  # ---
  # Original Rails locale file: activerecord-3.0.0/lib/active_record/locale/en.yml
  # ---

  # Attributes names common to most models
  attributes:
    created_at: "Creato il"
    updated_at: "Modificato il"

  # Active Record models configuration
  activerecord:
    errors:
      messages:
        taken: "è già in uso"
        record_invalid: "La validazione è fallita: %{errors}"
        # Append your own errors here or at the model/attributes scope.

      # You can define own errors for models or model attributes.
      # The values :model, :attribute and :value are always available for interpolation.
      #
      # For example,
      #   models:
      #     user:
      #       blank: "This is a custom blank message for %{model}: %{attribute}"
      #       attributes:
      #         login:
      #           blank: "This is a custom blank message for User login"
      # Will define custom blank validation message for User model and
      # custom blank validation message for login attribute of User model.
      #models:

    # Translate model names. Used in Model.human_name().
    #models:
      # For example,
      #   user: "Dude"
      # will translate User model name to "Dude"

    # Translate model attribute names. Used in Model.human_attribute_name(attribute).
    #attributes:
      # For example,
      #   user:
      #     login: "Handle"
      # will translate User attribute "login" as "Handle"

  # ---
  # Original Rails locale: activemodel-3.0.0/lib/active_model/locale/en.yml
  # ---

  errors:
    # The default format to use in full error messages.
    format: "%{attribute} %{message}"

    # The values :model, :attribute and :value are always available for interpolation
    # The value :count is available when applicable. Can be used for pluralization.
    messages:
      inclusion: "non è tra i valori permessi"
      exclusion: "è riservato"
      invalid: "non ha un formato valido"
      confirmation: "non coincide con la conferma"
      accepted: "deve essere spuntato"
      empty: "non può essere vuoto"
      blank: "deve essere compilato"
      too_long: "è troppo lungo (la lunghezza massima consentita è di %{count} caratteri)"
      too_short: "è troppo corto (la lunghezza minima è di %{count} caratteri)"
      wrong_length: "è della lunghezza sbagliata (deve essere di %{count} caratteri)"
      not_a_number: "deve essere un valore numerico valido"
      not_an_integer: "deve essere un numero intero"
      greater_than: "deve essere superiore a {{count}}"
      greater_than_or_equal_to: "deve essere uguale o superiore a {{count}}"
      equal_to: "deve essere uguale a {{count}}"
      less_than: "deve essere inferiore a {{count}}"
      less_than_or_equal_to: "deve essere uguale o inferiore a {{count}}"
      odd: "deve essere dispari"
      even: "deve essere pari"

  # ---
  # Original Rails locale file: actionpack-3.0.0/lib/action_view/locale/en.yml
  # ---

  number:
    # Used in number_with_delimiter()
    # These are also the defaults for 'currency', 'percentage', 'precision', and 'human'
    format:
      # Sets the separator between the units, for more precision (e.g. 1.0 / 2.0 == 0.5)
      separator: "."
      # Delimets thousands (e.g. 1,000,000 is a million) (always in groups of three)
      delimiter: ","
      # Number of decimals, behind the separator (the number 1 with a precision of 2 gives: 1.00)
      precision: 3
      # If set to true, precision will mean the number of significant digits instead
      # of the number of decimal digits (1234 with precision 2 becomes 1200, 1.23543 becomes 1.2)
      significant: false
      # If set, the zeros after the decimal separator will always be stripped (eg.: 1.200 will be 1.2)
      strip_insignificant_zeros: false

    # Used in number_to_currency()
    currency:
      format:
        # Where is the currency sign? %u is the currency unit, %n the number (default: $5.00)
        format: "%n %u"
        unit: "€"
        # These five are to override number.format and are optional
        separator: "."
        delimiter: ","
        precision: 2
        significant: false
        strip_insignificant_zeros: false

    # Used in number_to_percentage()
    percentage:
      format:
        # These five are to override number.format and are optional
        # separator:
        delimiter: ""
        # precision:
        # significant: false
        # strip_insignificant_zeros: false

    # Used in number_to_precision()
    precision:
      format:
        # These five are to override number.format and are optional
        # separator:
        delimiter: ""
        # precision:
        # significant: false
        # strip_insignificant_zeros: false

    # Used in number_to_human_size() and number_to_human()
    human:
      format:
        # These five are to override number.format and are optional
        # separator:
        delimiter: ""
        precision: 3
        significant: true
        strip_insignificant_zeros: true
      # Used in number_to_human_size()
      storage_units:
        # Storage units output formatting.
        # %u is the storage unit, %n is the number (default: 2 MB)
        format: "%n %u"
        units:
          byte:
            one:   "Byte"
            other: "Byte"
          kb: "KB"
          mb: "MB"
          gb: "GB"
          tb: "TB"
      # Used in number_to_human()
      decimal_units:
        format: "%n %u"
        # Decimal units output formatting
        # By default we will only quantify some of the exponents
        # but the commented ones might be defined or overridden
        # by the user.
        units:
          femto:
            one: quadrilionesimo
            other: quadrilionesimi
          pico:
            one: trilionesimo
            other: quadrilionesimi
          nano:
            one: bilionesimo
            other: bilionesimi
          micro:
            one: milionesimo
            other: milionesimi
          mili:
            one: millesimo
            other: millesimi
          centi:
            one: centesimo
            other: centesimi
          deci:
            one: decimo
            other: decimi
          unit: ""
          ten:
            one:   decina
            other: decine
          hundred:
            one:   centinaio
            other: centinaia
          thousand:
            one:   migliaio
            other: migliaia
          million:
            one:   milione
            other: milioni
          billion:
            one:   bilione
            other: bilioni
          trillion:
            one:   trilione
            other: trilioni
          quadrillion:
            one:   quadrilione
            other: quadrilioni

  # Used in distance_of_time_in_words(), distance_of_time_in_words_to_now(), time_ago_in_words()
  datetime:
    distance_in_words:
      half_a_minute: "mezzo minuto"
      less_than_x_seconds:
        one:   "meno di un secondo"
        other: "meno di %{count} secondi"
      x_seconds:
        one:   "un secondo"
        other: "%{count} secondi"
      less_than_x_minutes:
        one:   "meno di un minuto"
        other: "meno di %{count} minuti"
      x_minutes:
        one:   "un minuto"
        other: "meno di %{count} minuti"
      about_x_hours:
        one:   "circa un'ora"
        other: "circa %{count} ore"
      x_days:
        one:   "un giorno"
        other: "%{count} giorni"
      about_x_months:
        one:   "circa un mese"
        other: "circa %{count} mesi"
      x_months:
        one:   "un mese"
        other: "%{count} mesi"
      about_x_years:
        one:   "circa un anno"
        other: "circa %{count} anni"
      over_x_years:
        one:   "oltre un anno"
        other: "oltre %{count} anni"
      almost_x_years:
        one:   "almeno"
        other: "almeno %{count} anni"
    prompts:
      year:   "Anno"
      month:  "Mese"
      day:    "Giorno"
      hour:   "Ora"
      minute: "Minuto"
      second: "Secondi"

  helpers:
    select:
      # Default value for :prompt => true in FormOptionsHelper
      prompt: "Scegliere un'opzione"

    # Default translation keys for submit FormHelper
    submit:
      create: 'Creazione %{model}'
      update: 'Modifica %{model}'
      submit: 'Salvataggio %{model}'

